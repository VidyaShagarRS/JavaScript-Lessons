=== Comments in JavaScript ===

// This is an in-line comment.

/* This is a
multi-line comment */. 

==============================================

=== Date Types in JavaScript ===

var myFirstName = "Vidya"; // string
var myLastName = "Shagar"; // string
var myAge = 24; // Integer
var myWeight = 60.50; // Float
var is_Male = True; // Boolean.

In variable "var" we can modify the value of variable with same variable name in "var",
eg: var myName= "James";
    var myName= "John";
It executes the result.

By using variable "let" we can't do that, if we do - It shows the error message,
eg: let myName= "James";
    let myName= "John";
It shows the ERROR. But we can modify the value of " let myNmae = 'James'; " without assigning new variable like,
eg: let myName= "James";
        myName= "John";
It executes the result.

By using variable "const" we even can't change the value of existing variale of "const",
eg: const myName= "James";
          myName= "John";
It shows the ERROR message.
 
==============================================

=== Concatenating String with Variables ===

const myName = "Vidya Shagar RS";
const myStr = "My Name is " + myName + " and I am well!";

output: My Name is Vidya Shagar RS and I am well!

==============================================

=== Appending Variable to String ===

const addStr= "fun, but at sometimes it looks complicated!";
let myStr = "Learning to code is ";
myStr += addStr;

output: Learning to code is fun, but at sometimes it looks complicated!

==============================================

=== Find the Length of a String ===

let findStrLen = "Hello John";
                  0123456789
console.log(findStrLen.length)

output: 9

==============================================

=== Find the N-th Character in a String ===

let findStrLen = "Hello John";
                  0123456789
console.log(findStrLen[6])

output: J

==============================================


=== Find the Last Character in a String ===

let findStrLen = "Hello John";
                  0123456789
alert(findStrLen[findStrLen.length -2])

output: h

==============================================

=== Variable Concatenation ===

const myNoun = "dog";
const myAdjective = "big";
const myVerb = "ran";
const myAdverb = "quickly";

const wordBlanks = "The "+myAdjective+" "+myNoun+" "+myVerb+" "+myAdverb+".";

output: The big dog ran quickly.

==============================================

=== Store Multiple Values in one Variable using JavaScript Arrays ===

let myArray = ["Vidya Shagar", 24]; // Name and Age in one Variable using Array.

==============================================

=== Nest one Array within Another Array ===

let myArray = [["Cricket", "Players", 11], ["Kabaddi", "Player", 7], ["Volleyball", "Players", 6]];

==============================================

=== Modify Array Data With Indexes ===
 
let myArray = [18, 64, 99];
myArray[1] = 45;
console.log(myArray);

output: [18, 45, 99]

==============================================

=== Access Multi-Dimensional Arrays With Indexes ===

const myArray = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [[10, 11, 12], 13, 14],
];

const myData = myArray[2][1];
alert(myData);
console.log(myArray[3][0][2]);

output:(8) in alert, (12) in console.

==============================================

=== Manipulate Arrays With push() ===

const myArray = [["John", 1], ["cat", 2]];
myArray.push(["dog", 3]);
console.log(myArray)

output: [["John", 1], ["cat", 2], ["dog", 3]]

==============================================

=== Manipulate Arrays With pop() ===

const myArray = [["Austin", 44], ["Rock", 48]];
const removedFromMyArray = myArray.pop();
console.log(myArray);
console.log(removedFromMyArray);

output: [["Austin", 44]]

        ["Rock", 48]

==============================================

=== Manipulate Arrays With shift() ===

const myArray = [["John", 23], ["dog", 3]];
const removedFromMyArray = myArray.shift();
console.log(myArray);
console.log(removedFromMyArray);

output: [ ["dog", 3] ]

        ["John", 23]

==============================================

=== Manipulate Arrays With Unshift() ===

const ourArray = ["Stimpson", "J", "cat"];
ourArray.unshift("Happy");

output: ["Happy", "Stimpson", "J", "cat"]

==============================================

=== Multi-Dimensional Array Containing Several Sub-Arrays ===

const myList = [ ["T-shirt", 10], ["Shirt", 15], ["Jeans", 10], ["Tracks", 10], ["Shorts", 5] ];

==============================================
